# Deployment of Machine Learning models


First some usefull links for extra info on:
	- best resources to learn ML: https://www.trainindata.com/post/best-resources-to-learn-machine-learning
	- Feature Engineering: https://www.trainindata.com/post/data-processing
 
Typical ML model Pipeline steps

![ml_steps](/home/dmeijerink/pathe/ml_deployment/images/ml_pipeline_steps.png  "ml_steps")

these are the steps we perform before getting to the model deployment: puuting the model in the cloud or any other system where it can be accessed by our other systems in the business in other to get its predictions. 

 - Feature Engineering
 
	- Imputing/ remove missing data
 	 - outlier detection
  	- labels in categorical variables (high cardinality, infrequent labels, strings)
 	- categorical variable encoding 
 	-  check assumptions about distributions
 	- features magnitudes - scale (ml models sensitive to feature scale: Linear and Logistic regression, NN, SVM, KNN, KM, LDA and PCA)
 	
  - Feature Selection --> process to identify the most predictive features. There are important reasons to apply thorough and robust feature selection methods.
  
  	• Simple models are easier to interpret
	• Shorter training times
	• Enhanced generalisation by reducing overfitting
	• Easier to implement by software developers  Model production
	• Reduced risk of data errors during model use
	• Data redundancy
	• Smaller json messages sent over to the model
	• Json messages contain only the necessary variables / inputs
	• Less lines of code for error handling
	• Error handlers need to be written for each variable / input
	• Less information to log
	• Less feature engineering code